name: CI - Main

on:
  push:
    branches: 
      - 'main'
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, reopened]

jobs:
  
  build:
    name: Build and run tests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - name: Get pip cache directory
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip dependencies to speed up runtime
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -Iv flake8==3.9.2

      - name: Lint with flake8
        # Stops the build if there are Python syntax errors or undefined names.
        # exit-zero treats all errors as warnings. 
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics            
          flake8 . --count --exit-zero --max-complexity 10 --max-line-length 127 --statistics

      - name: Run unit tests
        run: |
          pytest

  run_code_analysis:
    name: Run SonarCloud code analysis
    runs-on: ubuntu-latest
    needs:
      - build
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    name: Create Stable release
    runs-on: ubuntu-latest
    needs:
      - run_code_analysis
    env:
      DOCKERHUB_ORG: devopskf
    if: github.event_name == 'push'
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version (minor) and create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor

      - name: Create a GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          prerelease: false

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 

      - name: Build Docker image
        run: docker build . --tag ${{ env.DOCKERHUB_ORG }}/${{ github.event.repository.name }}:${{ steps.tag_version.outputs.new_tag }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ env.DOCKERHUB_ORG }}/${{ github.event.repository.name }}:${{ steps.tag_version.outputs.new_tag }}